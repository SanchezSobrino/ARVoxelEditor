/* ARVoxelEditor - Augmented Reality Voxel Editor
 * Copyright (C) 2015 Santiago SÃ¡nchez Sobrino
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef COLOURS_H
#define COLOURS_H

/**
 * An enum of colours to be used together the colours array.
 * This enum was autogenerated from Python script using the
 * colour package: https://pypi.python.org/pypi/colour/0.0.6
 *
 * You can reorder them to control the order they appear
 * within the application
 */
enum EColour {
  BLACK,
  WHITE,
  NAVY_BLUE,
  DARK_BLUE,
  MEDIUM_BLUE,
  BLUE,
  DARK_GREEN,
  GREEN,
  DARK_CYAN,
  DEEP_SKY_BLUE,
  DARK_TURQUOISE,
  MEDIUM_SPRING_GREEN,
  LIME,
  SPRING_GREEN,
  CYAN,
  MIDNIGHT_BLUE,
  DODGER_BLUE,
  LIGHT_SEA_GREEN,
  FOREST_GREEN,
  SEA_GREEN,
  DARK_SLATE_GRAY,
  LIME_GREEN,
  MEDIUM_SEA_GREEN,
  TURQUOISE,
  ROYAL_BLUE,
  STEEL_BLUE,
  DARK_SLATE_BLUE,
  MEDIUM_TURQUOISE,
  INDIGO,
  DARK_OLIVE_GREEN,
  CADET_BLUE,
  CORNFLOWER_BLUE,
  MEDIUM_AQUAMARINE,
  DIM_GRAY,
  SLATE_BLUE,
  OLIVE_DRAB,
  SLATE_GRAY,
  LIGHT_SLATE_GRAY,
  MEDIUM_SLATE_BLUE,
  LAWN_GREEN,
  CHARTREUSE,
  AQUAMARINE,
  MAROON,
  PURPLE,
  OLIVE,
  GRAY,
  LIGHT_SLATE_BLUE,
  SKY_BLUE,
  LIGHT_SKY_BLUE,
  BLUE_VIOLET,
  DARK_RED,
  DARK_MAGENTA,
  SADDLE_BROWN,
  DARK_SEA_GREEN,
  LIGHT_GREEN,
  MEDIUM_PURPLE,
  DARK_VIOLET,
  PALE_GREEN,
  DARK_ORCHID,
  YELLOW_GREEN,
  SIENNA,
  BROWN,
  DARK_GRAY,
  LIGHT_BLUE,
  GREEN_YELLOW,
  PALE_TURQUOISE,
  LIGHT_STEEL_BLUE,
  POWDER_BLUE,
  FIREBRICK,
  DARK_GOLDENROD,
  MEDIUM_ORCHID,
  ROSY_BROWN,
  DARK_KHAKI,
  SILVER,
  MEDIUM_VIOLET_RED,
  INDIAN_RED,
  PERU,
  VIOLET_RED,
  CHOCOLATE,
  TAN,
  LIGHT_GRAY,
  THISTLE,
  ORCHID,
  GOLDENROD,
  PALE_VIOLET_RED,
  CRIMSON,
  GAINSBORO,
  PLUM,
  BURLYWOOD,
  LIGHT_CYAN,
  LAVENDER,
  DARK_SALMON,
  VIOLET,
  LIGHT_GOLDENROD,
  PALE_GOLDENROD,
  LIGHT_CORAL,
  KHAKI,
  ALICE_BLUE,
  HONEYDEW,
  AZURE,
  SANDY_BROWN,
  WHEAT,
  BEIGE,
  WHITE_SMOKE,
  MINT_CREAM,
  GHOST_WHITE,
  SALMON,
  ANTIQUE_WHITE,
  LINEN,
  LIGHT_GOLDENROD_YELLOW,
  OLD_LACE,
  RED,
  MAGENTA,
  DEEP_PINK,
  ORANGE_RED,
  TOMATO,
  HOT_PINK,
  CORAL,
  DARK_ORANGE,
  LIGHT_SALMON,
  ORANGE,
  LIGHT_PINK,
  PINK,
  GOLD,
  PEACH_PUFF,
  NAVAJO_WHITE,
  MOCCASIN,
  BISQUE,
  MISTY_ROSE,
  BLANCHED_ALMOND,
  PAPAYA_WHIP,
  LAVENDER_BLUSH,
  SEASHELL,
  CORNSILK,
  LEMON_CHIFFON,
  FLORAL_WHITE,
  SNOW,
  YELLOW,
  LIGHT_YELLOW,
  IVORY,

  COLOURS_LENGTH /* = 139 */
};

/**
 * A structure to represent colour information
 */
struct TColour {
  unsigned char r, g, b;  // Red, Green, Blue components (0-255)
  char name[30];          // Textual representation of the colour
  enum EColour index;     // Relation to the enum value it represents
};

/**
 * An array of fixed colours
 */
extern struct TColour colours[COLOURS_LENGTH];

#endif /* COLOURS_H */
